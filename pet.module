<?php

function pet_menu() {
  $items = [];
  $items['pets'] = [
    'page callback' => 'pet_page_view',
    'access callback' => TRUE
  ];
  $items['api/pets'] = [
    'page callback' => 'pet_page_api',
    'access callback' => TRUE,
    'delivery callback' => 'drupal_json_output'
  ];
  $items['api/delete-post'] = [
    'page callback' => 'delete_post',
    'access callback' => TRUE,
    'delivery callback' => 'drupal_json_output'
  ];
  return $items;
}

function pet_page_view() {
  $module_path = drupal_get_path('module', 'pet');
  drupal_add_js($module_path . '/theme/js/dist/bundle.js', ['type' => 'file', 'group' => 'theme', 'scope' => 'footer']);
  drupal_add_css($module_path . '/theme/css/style.css', ['type' => 'file', 'group' => 'theme']);
  return [
    '#theme' => 'html_tag',
    '#tag' => 'div',
    '#value' => ' ',
    '#attributes' => [
       'id' => 'root'
     ]
  ];
}

function pet_page_api() {
  $build = ['result' => []];
  $nids = pet_query($_POST);
  $entities = node_load_multiple($nids['result']);
  foreach ($entities AS $entity) {
    $build['result'][] = ['id' => $entity->nid, 
      'title' => $entity->title, 
      'image' => file_create_url($entity->field_image['und'][0]['uri']),
      'tid' => $entity->field_category['und'][0]['tid'],
    ];
  }
  
  return $build;
}

function pet_query(array $params) {
  $query = db_select('node', 'n');
  $query->addField('n', 'nid', 'nid');
  $query->join('field_data_field_image', 'i','i.entity_id = n.nid');
  $select = [];
  foreach($params AS $key => $value) {
    switch($key) {
      case 'selectA':
      case 'selectB':
      case 'selectC':
        array_push($select, $value);
      break;
      case 'search':
        $query->condition('n.title', '%' . $value . '%', 'LIKE');
      break;
    }
  }
  $implode = implode(',', $select);
  $array_sum = array_sum($select);
  if (!empty($select) && $array_sum > 0) {
    $query ->addField('c', 'field_category_tid','field_category_tid');
    $query->join('field_data_field_category', 'c', 'n.nid=c.entity_id');
    $query->condition('c.field_category_tid', $select, 'in');
    $query->orderBy("FIELD(field_category_tid, $implode)");
  }
  $query->condition('status', 1);
  $query->groupBy('n.nid');

  return ['result' => $query->execute()->fetchCol()];
}

function delete_post() {
  if (empty($_POST['id'])) {
    echo json_encode(
      array("message"=>"Unable to delete product.")
    ); 
    exit;
  }
  $query = db_delete('node')
    ->condition('nid', $_POST['id'], '=');
  $result = $query->execute();
  return ['message' => "deleted"];
}
